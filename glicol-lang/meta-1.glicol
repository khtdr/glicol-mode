// using rhai script language to write `meta` node is a rather advanced feature

// before, we play with existed node, but in meta, you create your own node from scratch.

// the principle of each node: to get the input and output right, in number blocks

// `input` is a 128-size array (if there is an input); output should be filled with 128 numbers

// this meta node is just a "sin" node
o1: meta `
    // output should be 128-size array for web audio
    // need to fill it before write index 0-127 of it
    // don't forget the semicolon
    output.pad(128, 0.0);
    // you should refer to rhai.rs website
    // for syntax details
    for i in 0..128 {
        // PI is a constant value
        // "phase" is a variable you can use
        // the total variables are limited
        // a-z, x1, x2, y1, y2
        // and the phase here
        // that's all
        output[i] = sin(2*PI()*phase) ;
        phase += 440.0 / sr;
        // sr is a number based on the system sample rate
    };
    while phase > 1.0 { phase -= 1.0 };
    output
` >> mul 0.2 // use with glicol node

// note:
// you should manual handle the "phase"
