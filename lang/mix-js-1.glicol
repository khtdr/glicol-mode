// you can mix some javascript code in glicol by wrapping it between ## and #

// you don't need to master javascript to benifit from some useful commands/math ops

// for example, `d()` will print loaded samples with an index in the browser console

// s() is another magic command that will return a random loaded sample name

// if there is a return value from your js code
// it will become part of the glicol code
// otherwise, only the action will be executed
// and the js code will be removed
// from the code sent to the engine

~x1: seq 60 >> sp \##s()# // random pick
~x2: seq _60 >> sp \##s(0, 20)# // random pick range
~x3: seq _ _60 >> sp \##s(42)# // select
~x4: seq _60 _ >> sp \##s("in")# // filter word
out: mix ~x.. >> plate ##1/10#
// from now on, don't rely on the update button anymore
// use ctrl-enter to run the code
// use shift-enter to run & replace the mix-js code
// use ctrl-z if you don't like the replacement
